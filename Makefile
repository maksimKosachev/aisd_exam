# –§–ª–∞–≥–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
CC = gcc
CFLAGS = -Isrc -Wall -Wextra -Wpedantic -g


# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –≤ –∫–∞–∂–¥–æ–º —Ä–∞–∑–¥–µ–ª–µ
UNITS = elementary
elementary_STRUCTURES = stack linear_queue circular_queue matrix deque
IMPLEMENTATIONS = list vector rectangular


# –ú–∞–∫—Ä–æ—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ü–µ–ª–µ–π –≤–∏–¥–∞ elementary/stack/list
define make_unit_target
$(unit)/$(structure)/$(implementation):
	@echo "üì¶ –°–æ–±–∏—Ä–∞–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É: $(unit)/$(structure)/$(implementation)"
	@$(MAKE) --silent -C src/$(unit)/$(structure) -f Makefile $(implementation)
	@echo "üíÖ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Å–æ–±—Ä–∞–Ω–∞"
endef

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ü–µ–ª–∏
$(foreach unit,$(UNITS), \
    $(foreach structure,$($(unit)_STRUCTURES), \
        $(foreach implementation,$(IMPLEMENTATIONS), \
            $(eval $(call make_unit_target,$(unit),$(structure),$(implementation))) \
        ) \
    ) \
)

# –®–∞–±–ª–æ–Ω —Ç–µ—Å—Ç–æ–≤–æ–π —Ü–µ–ª–∏
test/%:
	@echo "üïµÔ∏è  –¢–µ—Å—Ç–∏—Ä—É–µ–º: $*"
	
	@set -- $(subst /, , $*); \
	SECTION=$$1; STRUCTURE=$$2; IMPLEMENTATION=$$3; \
	$(MAKE) --silent $$SECTION/$$STRUCTURE/$$IMPLEMENTATION; \
	FILE=$${STRUCTURE}_$${IMPLEMENTATION}_test; \
	TEST_SRC=tests/$$SECTION/$$STRUCTURE/$$FILE.c; \
	if [ ! -f $$TEST_SRC ]; then \
	echo "‚ùå –§–∞–π–ª —Ç–µ—Å—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $$TEST_SRC"; exit 1; fi; \
	TEST_OBJ=build/tests/obj/$$FILE.o; \
	TEST_BIN=build/tests/bin/$$FILE; \
	LIB="-Lbuild/bin -l$${STRUCTURE}_$${IMPLEMENTATION}"; \
	mkdir -p build/tests/obj build/tests/bin; \
	echo "üß∞ –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º $$TEST_SRC"; \
	$(CC) $(CFLAGS) -c $$TEST_SRC -o $$TEST_OBJ; \
	echo "üß± –õ–∏–Ω–∫—É–µ–º $$TEST_OBJ"; \
	$(CC) $(CFLAGS) $$TEST_OBJ $$LIB -o $$TEST_BIN; \
	echo "üöÄ –ó–∞–ø—É—Å–∫"; \
	valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes $$TEST_BIN;\
	echo "üíÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω"

# –û—á–∏—Å—Ç–∫–∞
clean:
	@echo "üî• –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ build/"
	@rm -rf build/


# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∏–∫—Ç–∏–≤–Ω—ã—Ö —Ü–µ–ª–µ–π
PHONY_TARGETS := \
	$(foreach unit,$(UNITS), \
		$(foreach structure,$($(unit)_STRUCTURES), \
			$(foreach implementation,$(IMPLEMENTATIONS), \
				$(unit)/$(structure)/$(implementation) \
			) \
		) \
	)

.PHONY: clean test $(PHONY_TARGETS)